{
    "swagger": "2.0",
    "info": {
        "description": "API сервиса для деления расходов FinFlow Split",
        "title": "FinFlow Split API",
        "termsOfService": "http://finflow.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://finflow.io/support",
            "email": "support@finflow.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8085",
    "basePath": "/",
    "paths": {
        "/api/v1/category": {
            "get": {
                "description": "Возвращает список категорий указанного типа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "категории"
                ],
                "summary": "Получить категории",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Тип категории",
                        "name": "category_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список категорий",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryListResponse"
                        }
                    },
                    "400": {
                        "description": "Не указан тип категорий",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "options": {
                "description": "Возвращает список всех доступных типов категорий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "категории"
                ],
                "summary": "Получить типы категорий",
                "responses": {
                    "200": {
                        "description": "Список типов категорий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/category/{id}": {
            "get": {
                "description": "Возвращает информацию о конкретной категории по её ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "категории"
                ],
                "summary": "Получить категорию по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип категории",
                        "name": "category_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о категории",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID категории или не указан тип",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event": {
            "get": {
                "description": "Возвращает список всех мероприятий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "мероприятия"
                ],
                "summary": "Получить список мероприятий",
                "responses": {
                    "200": {
                        "description": "Список мероприятий",
                        "schema": {
                            "$ref": "#/definitions/dto.EventListResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}": {
            "get": {
                "description": "Возвращает информацию о конкретном мероприятии по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "мероприятия"
                ],
                "summary": "Получить мероприятие по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о мероприятии",
                        "schema": {
                            "$ref": "#/definitions/dto.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Мероприятие не найдено",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет существующее мероприятие по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "мероприятия"
                ],
                "summary": "Обновить мероприятие",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные мероприятия",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленное мероприятие",
                        "schema": {
                            "$ref": "#/definitions/dto.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Мероприятие не найдено",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет мероприятие по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "мероприятия"
                ],
                "summary": "Удалить мероприятие",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Мероприятие успешно удалено"
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/activity": {
            "get": {
                "description": "Возвращает список активностей для указанного события",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "активности"
                ],
                "summary": "Получить активности события",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активностей",
                        "schema": {
                            "$ref": "#/definitions/dto.ActivityListResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID события",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Событие не найдено",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новую запись об активности в событии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "активности"
                ],
                "summary": "Создать активность",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные активности",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная активность",
                        "schema": {
                            "$ref": "#/definitions/dto.ActivityResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Событие не найдено",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/activity/{id_activity}": {
            "get": {
                "description": "Возвращает информацию о конкретной активности по её ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "активности"
                ],
                "summary": "Получить активность по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID активности",
                        "name": "id_activity",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация об активности",
                        "schema": {
                            "$ref": "#/definitions/dto.ActivityResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID активности",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Активность не найдена",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет существующую активность по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "активности"
                ],
                "summary": "Обновить активность",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID активности",
                        "name": "id_activity",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные активности",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная активность",
                        "schema": {
                            "$ref": "#/definitions/dto.ActivityResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Активность не найдена",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет активность по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "активности"
                ],
                "summary": "Удалить активность",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID активности",
                        "name": "id_activity",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Активность успешно удалена",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID активности",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/debts": {
            "get": {
                "description": "Возвращает все долги, связанные с мероприятием",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "долги"
                ],
                "summary": "Получить долги мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список долгов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DebtDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/optimized-debts": {
            "get": {
                "description": "Возвращает список оптимизированных долгов мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "долги",
                    "оптимизация"
                ],
                "summary": "Получить оптимизированные долги мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список оптимизированных долгов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OptimizedDebtDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Запускает алгоритм оптимизации долгов и возвращает оптимизированный список долгов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "долги",
                    "оптимизация"
                ],
                "summary": "Оптимизировать долги мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список оптимизированных долгов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OptimizedDebtDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/task": {
            "get": {
                "description": "Возвращает список всех задач, связанных с указанным мероприятием",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "задачи"
                ],
                "summary": "Получить все задачи мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список задач",
                        "schema": {
                            "$ref": "#/definitions/dto.TaskListResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новую задачу в рамках указанного мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "задачи"
                ],
                "summary": "Создать новую задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные задачи",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная задача",
                        "schema": {
                            "$ref": "#/definitions/dto.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/task/{id_task}": {
            "get": {
                "description": "Возвращает информацию о конкретной задаче по её ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "задачи"
                ],
                "summary": "Получить задачу по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "id_task",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о задаче",
                        "schema": {
                            "$ref": "#/definitions/dto.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет существующую задачу по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "задачи"
                ],
                "summary": "Обновить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "id_task",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные задачи",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная задача",
                        "schema": {
                            "$ref": "#/definitions/dto.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет задачу по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "задачи"
                ],
                "summary": "Удалить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "id_task",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Задача успешно удалена"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/transaction": {
            "get": {
                "description": "Возвращает список всех транзакций, связанных с указанным мероприятием",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "транзакции"
                ],
                "summary": "Получить все транзакции мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список транзакций",
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionListResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новую транзакцию в рамках указанного мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "транзакции"
                ],
                "summary": "Создать новую транзакцию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные транзакции",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная транзакция",
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/transaction/{id_transaction}": {
            "get": {
                "description": "Возвращает информацию о конкретной транзакции по её ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "транзакции"
                ],
                "summary": "Получить транзакцию по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID транзакции",
                        "name": "id_transaction",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о транзакции",
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Транзакция не найдена",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет существующую транзакцию по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "транзакции"
                ],
                "summary": "Обновить транзакцию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID транзакции",
                        "name": "id_transaction",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные транзакции",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная транзакция",
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет транзакцию по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "транзакции"
                ],
                "summary": "Удалить транзакцию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID транзакции",
                        "name": "id_transaction",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Транзакция успешно удалена"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/user": {
            "get": {
                "description": "Возвращает список всех пользователей, связанных с мероприятием",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Получить пользователей мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет список пользователей в мероприятие",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Добавить пользователей в мероприятие",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Список ID пользователей",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователи успешно добавлены"
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/user/dummies": {
            "get": {
                "description": "Возвращает список всех фиктивных (dummy) пользователей, связанных с мероприятием",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Получить фиктивных пользователей мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список фиктивных пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID мероприятия",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает несколько фиктивных (dummy) пользователей в рамках мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Создать несколько фиктивных пользователей",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Список имен фиктивных пользователей",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Список созданных фиктивных пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/user/dummy": {
            "post": {
                "description": "Создает нового фиктивного (dummy) пользователя в рамках мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Создать фиктивного пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные фиктивного пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданный фиктивный пользователь",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/user/{id_user}": {
            "delete": {
                "description": "Удаляет пользователя из мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Удалить пользователя из мероприятия",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id_user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пользователь успешно удален из мероприятия"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/event/{id_event}/user/{id_user}/optimized-debts": {
            "get": {
                "description": "Возвращает список оптимизированных долгов для конкретного пользователя в мероприятии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "долги",
                    "оптимизация"
                ],
                "summary": "Получить оптимизированные долги пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID мероприятия",
                        "name": "id_event",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id_user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список оптимизированных долгов пользователя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OptimizedDebtDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/manage/category": {
            "post": {
                "description": "Создает новую категорию указанного типа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "категории"
                ],
                "summary": "Создать новую категорию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Тип категории",
                        "name": "category_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Данные категории",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная категория",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса или не указан тип",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/manage/category/{id}": {
            "put": {
                "description": "Обновляет существующую категорию по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "категории"
                ],
                "summary": "Обновить категорию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип категории",
                        "name": "category_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Данные категории",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная категория",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса или не указан тип",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет категорию по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "категории"
                ],
                "summary": "Удалить категорию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип категории",
                        "name": "category_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Категория успешно удалена",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID категории или не указан тип",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/manage/icons": {
            "get": {
                "description": "Возвращает список всех доступных иконок в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "иконки"
                ],
                "summary": "Получить все иконки",
                "responses": {
                    "200": {
                        "description": "Список иконок",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.IconResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новую иконку в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "иконки"
                ],
                "summary": "Создать новую иконку",
                "parameters": [
                    {
                        "description": "Данные иконки",
                        "name": "icon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.IconFullDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная иконка",
                        "schema": {
                            "$ref": "#/definitions/dto.IconResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/manage/icons/{id}": {
            "get": {
                "description": "Возвращает информацию о конкретной иконке по её ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "иконки"
                ],
                "summary": "Получить иконку по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID иконки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация об иконке",
                        "schema": {
                            "$ref": "#/definitions/dto.IconResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Иконка не найдена",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет существующую иконку по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "иконки"
                ],
                "summary": "Обновить иконку",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID иконки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные иконки",
                        "name": "icon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.IconFullDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная иконка",
                        "schema": {
                            "$ref": "#/definitions/dto.IconResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет иконку по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "иконки"
                ],
                "summary": "Удалить иконку",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID иконки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Иконка успешно удалена"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/list": {
            "post": {
                "description": "Возвращает информацию о пользователях по списку ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Получить пользователей по списку ID",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Искать по внешним ID",
                        "name": "by_external",
                        "in": "query"
                    },
                    {
                        "description": "Список ID пользователей",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/sync": {
            "post": {
                "description": "Обновляет локальные данные пользователей из ID-сервиса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Синхронизировать пользователей с ID-сервисом",
                "parameters": [
                    {
                        "description": "Список ID пользователей для синхронизации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователи успешно синхронизированы"
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id_user}": {
            "get": {
                "description": "Возвращает информацию о пользователе по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Получить пользователя по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id_user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Искать по внешнему ID",
                        "name": "by_external",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID пользователя",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет информацию о пользователе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Обновить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id_user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный пользователь",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет пользователя по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "пользователи"
                ],
                "summary": "Удалить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id_user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пользователь успешно удален"
                    },
                    "400": {
                        "description": "Неверный формат ID пользователя",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id_user}/event": {
            "post": {
                "description": "Создает новое мероприятие с указанным пользователем в качестве создателя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "мероприятия"
                ],
                "summary": "Создать новое мероприятие",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя (создателя)",
                        "name": "id_user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные мероприятия",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное мероприятие",
                        "schema": {
                            "$ref": "#/definitions/dto.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных запроса",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ActivityListResponse": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ActivityResponse"
                    }
                }
            }
        },
        "dto.ActivityRequest": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ActivityResponse": {
            "type": "object",
            "properties": {
                "activity_id": {
                    "type": "integer"
                },
                "datetime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CategoryListResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CategoryResponse"
                    }
                }
            }
        },
        "dto.CategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "icon_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CategoryResponse": {
            "type": "object",
            "properties": {
                "icon": {
                    "$ref": "#/definitions/dto.IconDTO"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.DebtDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "from_user_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "to_user_id": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        },
        "dto.EventListResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventResponse"
                    }
                }
            }
        },
        "dto.EventMembersDTO": {
            "type": "object",
            "properties": {
                "dummies_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.EventRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "members": {
                    "$ref": "#/definitions/dto.EventMembersDTO"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.EventResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photo_id": {
                    "type": "string"
                }
            }
        },
        "dto.IconDTO": {
            "type": "object",
            "properties": {
                "external_uuid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.IconFullDTO": {
            "type": "object",
            "required": [
                "file_uuid",
                "name"
            ],
            "properties": {
                "file_uuid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.IconResponse": {
            "type": "object",
            "required": [
                "file_uuid",
                "name"
            ],
            "properties": {
                "file_uuid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.OptimizedDebtDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "event_id": {
                    "type": "integer"
                },
                "from_user_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "to_user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ShareDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "dto.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.TaskDTO": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TaskListResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TaskDTO"
                    }
                }
            }
        },
        "dto.TaskRequest": {
            "type": "object",
            "required": [
                "title",
                "user_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TaskResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/definitions/dto.TaskDTO"
                }
            }
        },
        "dto.TransactionListResponse": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TransactionResponse"
                    }
                }
            }
        },
        "dto.TransactionRequest": {
            "type": "object",
            "required": [
                "amount",
                "from_user",
                "name",
                "type",
                "users"
            ],
            "properties": {
                "amount": {
                    "description": "Общая сумма",
                    "type": "number"
                },
                "from_user": {
                    "description": "ID пользователя, который заплатил",
                    "type": "integer"
                },
                "name": {
                    "description": "Дополнительные поля для связи с сущностями",
                    "type": "string"
                },
                "portion": {
                    "description": "Распределение (зависит от типа)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "transaction_category_id": {
                    "description": "ID категории транзакции",
                    "type": "integer"
                },
                "type": {
                    "description": "\"percent\" | \"amount\" | \"units\"",
                    "type": "string"
                },
                "users": {
                    "description": "Список пользователей-участников",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.TransactionResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "datetime": {
                    "type": "string"
                },
                "debts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DebtDTO"
                    }
                },
                "event_id": {
                    "type": "integer"
                },
                "from_user": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "shares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ShareDTO"
                    }
                },
                "transaction_category_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.UserProfileDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_dummy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/dto.UserProfileDTO"
                }
            }
        },
        "errors.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/errors.ErrorResponseDetail"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "errors.ErrorResponseAdditionalData": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string",
                    "example": "slug"
                }
            }
        },
        "errors.ErrorResponseDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "validation"
                },
                "data": {
                    "$ref": "#/definitions/errors.ErrorResponseAdditionalData"
                },
                "message": {
                    "type": "string",
                    "example": "invalid input"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}